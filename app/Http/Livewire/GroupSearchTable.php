<?php


namespace App\Http\Livewire;


use App\Course;
use App\Group;
use App\Traits\LogsTrail;
use App\Traits\SetParamsTable;
use Mediconesystems\LivewireDatatables\BooleanColumn;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\DateColumn;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;
use Mediconesystems\LivewireDatatables\NumberColumn;

/**
 * Libreria https://github.com/mediconesystems/livewire-datatables
 * Class GroupSearchTable
 * @package App\Http\Livewire
 */
class GroupSearchTable extends LivewireDatatable
{
   use SetParamsTable, LogsTrail;

   public $model        = Group::class;

   public $exportable   = true;

   protected $listeners = ['setNewDate'];

   public $hideable    = 'select';

   public function builder()
   {
      return $this->model::query()
         ->where('groups.name', 'like', "%$this->params%")
         ->orWhere('groups.code', 'like', "%$this->params%")
          ->join('courses', 'courses.id', '=', 'course_id');
   }

   public function columns() : array
   {
      $columns = [
         Column::name('code')->label(__('modules.input.code'))->searchable()->filterable(),
         Column::callback(['name', 'course.name'], function ($name, $course_name){
            return "Grupo: {$name} de {$course_name}";
         })->label(__('modules.group.name'))->searchable()->filterable(),
         BooleanColumn::name('state')->label('Estado')->filterable()->hide(),
         Column::name('course.name')->filterable(
            $this->courses->pluck('name')
         )->label(__('modules.course.name')),
         NumberColumn::name('enrollments.id:count')->label('# de Matrículas')->filterable()->alignCenter(),
         DateColumn::name('created_at')->label(__('modules.table.created'))->filterable(),
         Column::callback(['id'], function ($id){
            return view('fragments.link-to', ['route' => 'group-detail', 'params' => ['id' => $id], 'name' => "Ver", 'btn' => 'btn-blue']);
         })->label(__('modules.table.detail'))->alignRight()->excludeFromExport(),
      ];
      return $columns;
   }

   public function getCoursesProperty()
   {
      return Course::all('name');
   }

   public function render()
   {
      $this->emit('stopClear');
      $this->setLog('info', 'Búsqueda grupos', 'render', __('modules.search.title'));
      return parent::render(); // TODO: Change the autogenerated stub
   }
}
