<?php


namespace App\Http\Livewire;


use App\Student;
use App\Traits\LogsTrail;
use App\Traits\SetParamsTable;
use Mediconesystems\LivewireDatatables\BooleanColumn;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\DateColumn;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;

/**
 * Libreria https://github.com/mediconesystems/livewire-datatables
 * Class StudentSearchTable
 * @package App\Http\Livewire
 */
class StudentSearchTable extends LivewireDatatable
{
   use SetParamsTable, LogsTrail;

   public $model = Student::class;

   public $exportable = true;

   public $hideable    = 'select';

   protected $listeners = ['refreshLivewireDatatable', 'setNewDate'];

   public function builder()
   {
      return $this->model::query()
         ->where('name', 'like', "%$this->params%")
         ->orWhere('last_name', 'like', "%$this->params%")
         ->orWhere('email', 'like', "%$this->params%")
         ->orWhere('document', 'like', "%$this->params%");
   }

   public function columns()
   {
      $columns = [
         Column::name('name')->label(__('modules.input.names'))->filterable()->searchable(),
         Column::name('last_name')->label(__('modules.input.last_name'))->filterable()->searchable(),
         Column::name('email')->label(__('modules.input.email'))->filterable()->searchable(),
         Column::name('document')->label(__('modules.input.document'))->filterable()->searchable(),
         BooleanColumn::name('state')->label(__('modules.input.state'))->filterable()->alignCenter(),
         DateColumn::name('created_at')->label(__('modules.table.created'))->filterable(),
         Column::callback(['id'], function ($id){
            return view('fragments.link-to', ['route' => 'moodle-detail', 'params' => ['id' => $id], 'name' => 'Ver']);
         })->label(__('modules.table.detail'))->alignCenter()->excludeFromExport(),
      ];
      return $columns;
   }

   public function render()
   {
      $this->emit('stopClear');
      $this->setLog('info', 'BÃºsqueda user plataforma', 'render', __('modules.search.title'));
      return parent::render(); // TODO: Change the autogenerated stub
   }

}
